#include <iostream>

using namespace std;

int main()
{
	/*
	Q1. 동전을 백만 번 던지는 것을 시뮬레이션하고
		앞면과 뒷면의 수를 출력하는 프로그램을 작성하라.
		다음과 같이 각 앞뒤가 몇 %씩 나오는지 계산해 출력하라
		ex>
			100 번째 일 때 .. 앞면 oo% 뒷면 oo%
			...
			1000 번째 일 때 .. 앞면 oo% 뒷면 oo%
			...
			1000000 번째 일 때 .. (100번 단위로) */

	/*srand(time(NULL));
	int front = 0, i = 1;

	for (int n = 100; n <= 1000000; n *= 10)
	{
		for (i -= 1; i < n; i++)
		{
			if (rand() % 2 == 1)
			{
				front++;
			}
		}
		cout << n << "번째 일 때 .. 앞면" << float(front) / n * 100 << "% 뒷면 " << float(n - front) / n * 100 << "%\n";
	}*/
	/*
	Q2. 아이템 목록이 다음과 같을 때
		등급			아이템		확률		아이템		확률
		------------------------------------------------
		5star		A-Item		1%
		------------------------------------------------
		4star		B-Item		3%		C-Item		3%
		------------------------------------------------
		3star		D-Item		5%		E-Item		5%
					F-Item		5%
		------------------------------------------------
		2star		G-Item		10%		H-Item		10%
					I-Item		10%		J-Item		10%
		------------------------------------------------
		1star		K-Item		38%		
		------------------------------------------------
		각 아이템이 지정된 확률에 맞게 정확히 나올 수 있도록 프로그램을 작성하시오.
		ex > 횟수 ? 100		A:1, B:3, C:3, D:5 .........
			 횟수 ? 1000		A:10, B:30, C:30, D:50 ........ */
	/*int item[11] = { 0 };
	int begin[11] = { 1,3,3,5,5,5,10,10,10,10,38 };
	int n = 100;

	srand(time(NULL));

	for (int i = 1; i <= 1000000; i++)
	{
		int temp = rand() % 11;

		if (item[temp] == begin[temp] * n / 100)
		{
			i--;
			continue;
		}
		item[temp]++;

		if (i == n)
		{
			cout << "횟수 ? " << i << "\t";
			for (int j = 0; j <= 10; j++)
			{
				cout << (char)('A' + j) << ": " << item[j] << " ";
			}
			cout << endl;
			n *= 10;
		}
	}*/

	/*
	Q3. 학교에 100개의 사물함과 100명의 학생이 있다.
		모든 사물함이 첫 날에는 닫혀 있다.
		학생이 교실로 들어가면서
			s1이라는 첫 번째 학생은 모든 사물함을 연다.
			s2라는 두 번째 학생은 L2부터 시작하여 1개씩 
				건너 뛰면서 사물함을 닫는다.
			s3 라는 세 번째 학생은 L3부터 시작하여 2개씩
				건너 뛰면서 사물함 상태를 변경한다. (열림 <-> 닫힘)
			s4 라는 네 번째 학생은 L4부터 시작하여 3개씩
				건너 뛰면서 사물함의 상태를 변경한다. (열림 <-> 닫힘)
			학생 s100이 L100사물함을 변경할 때 까지 계속 된다.
		모든 학생이 교실을 통과하고 난 다음, 어떤 사물함이 열려있는지,
		열려있는 모든 사물함의 번호를 출력하는 프로그램을 작성하라. */

	int locker[100] = { 0 }; // 0 닫힘 1 열림
	
	for (int s = 0; s < 100; s++)
	{
		for (int L = s; L < 100; L += s + 1)
		{
			if (locker[L] == 0)
			{
				locker[L] = 1;
			}
			else
			{
				locker[L] = 0;
			}
		}
	}

	for (int L = 0; L < 100; L++)
	{
		if (locker[L] == 1)
		{
			cout << "L" << L + 1 << " ";
		}
	}
	return 0;
}